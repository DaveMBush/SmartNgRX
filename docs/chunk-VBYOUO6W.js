import{a as l}from"./chunk-CG3MNAEL.js";import"./chunk-3FR5PQZO.js";import"./chunk-T4WX5D76.js";import{a as p}from"./chunk-C5SIYBOV.js";import{a as n}from"./chunk-LSIHCBJT.js";import"./chunk-PZEHRWLK.js";import{X as D}from"./chunk-CQLVC7LO.js";import{Qa as c,pb as g,ta as i,xa as d}from"./chunk-JNJDPWAB.js";import{a as s,b as r,h as y}from"./chunk-TWZW5B45.js";var h=y(D());var N={title:"Global Registration",mdFile:"./index.md",order:5,category:p},o=N;var m=[];var R={},u=R;var v=`<h1 id="global-registration" href="using-smart-ng-rx/global-registration" headinglink="true" class="ngde">Global Registration<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="global-registration"></ng-doc-heading-anchor></h1><p class="ngde">Now that we have all the pieces in place, we can register our definitions with Smart NgRX so that they can be used by the library.</p><p class="ngde">Before we do this, though, we need to register global, top level definitions using <code class="ngde ng-doc-code-with-link"><a href="internal-api/functions/internal-api/provideSmartNgRX" class="ng-doc-code-anchor ngde">provideSmartNgRX</a></code>.</p><p class="ngde">We recommend adding this to your app.module.ts file directly, or indirectly.</p><p class="ngde">If you are using a stand alone component for your <code class="ngde">app.component.ts</code> file, then you'll want to include this in your <code class="ngde">app.config.ts</code> file that <code class="ngde">main.ts</code> references.</p><p class="ngde">If you've jumped ahead and looked at the definition of <code class="ngde ng-doc-code-with-link"><a href="internal-api/functions/internal-api/provideSmartNgRX" class="ng-doc-code-anchor ngde">provideSmartNgRX</a></code>, you'll see that it takes an optional <code class="ngde ng-doc-code-with-link"><a href="internal-api/interfaces/internal-api/MarkAndDeleteInit" class="ng-doc-code-anchor ngde">MarkAndDeleteInit</a></code> object as a parameter. This allows us to configure how Mark and Delete works globally. We'll cover this in more detail in the <a href="/using-smart-ng-rx/mark-and-delete" class="ngde">Mark and Delete</a> section.</p><p class="ngde">While you are here, you'll also want to make sure you've provided the NgRX store. You'll want to do this using <code class="ngde">StoreModule.forRoot({})</code>. If you are using the latest Angular syntax, you'll need to put this in the <code class="ngde">providers</code> section of your app.module.ts file or something it imports directly.</p><p class="ngde">If your code is using stand-alone components that uses the new NgRX syntax of <code class="ngde">provideStore()</code>, you'll want to put that in the providers section as well. NgRX relies on the older syntax so it can work with existing code.</p><p class="ngde">You do not need to provide the effects unless your code relies on them. NgRX does not use effects to achieve its goals.</p>`,e=class e extends n{constructor(){super();this.pageType="guide";this.pageContent=v;this.editSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/edit/main/apps/documentation/src/app/using-smart-ng-rx/global-registration/index.md?message=docs(): describe your changes here...";this.viewSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/blob/release/apps/documentation/src/app/using-smart-ng-rx/global-registration/index.md";this.page=o;this.demoAssets=u}};e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=i({type:e,selectors:[["ng-doc-page-mj0nffs8"]],features:[g([{provide:n,useExisting:e},m,o.providers??[]]),d],decls:1,vars:0,template:function(t,b){t&1&&c(0,"ng-doc-page")},dependencies:[l],encapsulation:2,changeDetection:0});var a=e,w=[r(s({},(0,h.isRoute)(o.route)?o.route:{}),{path:"",component:a,title:"Global Registration"})],Y=w;export{a as PageComponent,Y as default};
