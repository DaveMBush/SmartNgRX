"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7193],{7193:(p,a,n)=>{n.r(a),n.d(a,{DynamicComponent:()=>i,default:()=>r});var d=n(5950),o=n(808),s=n(21);let i=(()=>{var e;class c extends d.a{constructor(){super(),this.routePrefix=void 0,this.pageType="api",this.pageContent='<header class="ngde"><div class="ng-doc-page-tags ngde"><span class="ng-doc-tag ngde" indexable="false" data-content="ng-doc-scope">smart-ngrx</span> <span class="ng-doc-inline-delimiter ngde" indexable="false">/</span> <span class="ng-doc-tag ngde" indexable="false" data-content="Interface">Interface</span></div><h1 id="entitydefinition" class="ngde">EntityDefinition<a title="Link to heading" class="ng-doc-header-link ngde" href="/api/smart-ngrx/interfaces/EntityDefinition#entitydefinition"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1></header><section class="ngde"><p class="ngde">This is the interface that is used to define the entity for the provideSmartFeatureEntities provider function</p></section><section class="ngde"><h2 id="properties" class="ngde">Properties<a title="Link to heading" class="ng-doc-header-link ngde" href="/api/smart-ngrx/interfaces/EntityDefinition#properties"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-properties-table ngde"><thead class="ngde"><tr indexable="false" class="ngde"><th class="ng-doc-properties-table-name ngde">Name</th><th class="ng-doc-properties-table-type ngde">Type</th><th class="ng-doc-properties-table-description ngde">Description</th></tr></thead><tbody class="ngde"><tr data-slug="effectServiceToken" data-slugtype="member" id="effectServiceToken" class="ngde"><td indexable="false" class="ngde">effectServiceToken<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">EffectServiceToken&#x3C;Row></code></td><td class="ngde"><p class="ngde">This is the service token related to the service the effect for this entity should call to do CRUD operations against the backend.</p></td></tr><tr data-slug="fieldName" data-slugtype="member" id="fieldName" class="ngde"><td indexable="false" class="ngde">fieldName<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">string</code></td><td class="ngde"><p class="ngde">The field name that you\'d usually use in the reducer object you\'d use in StoreModule.forFeature(featureName, reducer) OR the name you\'d use in provideState(featureName, reducer)</p><p class="ngde">We also use this name along with the feature as the Source field in actions but this should not matter to you because you\'ll either be using actions we\'ve created or using your own actions for your specific purposes.</p></td></tr></tbody></table></div></section><section class="ngde"><h2 id="methods" class="ngde">Methods<a title="Link to heading" class="ng-doc-header-link ngde" href="/api/smart-ngrx/interfaces/EntityDefinition#methods"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-method-table ngde"><thead class="ngde"><tr class="ngde"><th indexable="false" class="ngde"><h3 data-slugtype="member" id="defaultrow" class="ngde">defaultRow()<a title="Link to heading" class="ng-doc-header-link ngde" href="/api/smart-ngrx/interfaces/EntityDefinition#defaultrow"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h3><div class="ng-doc-node-details ngde"></div></th></tr></thead><tbody class="ngde"><tr class="ngde"><td class="ngde"><p class="ngde">The static function that returns a default row for the entity when it does not yet exist in the store.</p></td></tr><tr class="ngde"><td class="ngde"><h5 class="no-anchor ngde" indexable="false">Presentation</h5><pre class="ngde hljs"><code lang="typescript" class="hljs language-typescript code-lines ngde"><span class="line ngde"><span class="hljs-title function_ ngde">defaultRow</span>(<span class="hljs-attr ngde">this</span>: <span class="hljs-built_in ngde">void</span>, <span class="hljs-attr ngde">id</span>: <span class="hljs-built_in ngde">string</span>): <span class="hljs-title class_ ngde">Row</span>;\n</span></code></pre></td></tr><tr class="ngde"><td class="ngde"><h5 class="no-anchor ngde" indexable="false">Parameters</h5><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-parameters-table ngde"><thead class="ngde"><tr indexable="false" class="ngde"><th class="ng-doc-parameters-table-name ngde">Name</th><th class="ng-doc-parameters-table-type ngde">Type</th><th class="ng-doc-parameters-table-description ngde">Description</th></tr></thead><tbody class="ngde"><tr class="ngde"><td indexable="false" class="ngde">this<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">void</code></td><td class="ngde"></td></tr><tr class="ngde"><td indexable="false" class="ngde">id<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">string</code></td><td class="ngde"><p class="ngde">The unique identifier for the row. You should use this to set the id of the id row in the default row.</p></td></tr></tbody></table></div><h5 class="no-anchor ngde" indexable="false">Returns</h5><p class="ngde"><code indexable="false" class="ngde">Row</code></p></td></tr></tbody></table></div></section>',this.demo=void 0,this.demoAssets=void 0}}return(e=c).\u0275fac=function(t){return new(t||e)},e.\u0275cmp=s.Xpm({type:e,selectors:[["ng-doc-page-api-smart-ngrx-interfaces-entity-definition"]],standalone:!0,features:[s._Bn([{provide:d.a,useExisting:e}]),s.qOj,s.jDz],decls:1,vars:0,template:function(t,f){1&t&&s._UZ(0,"ng-doc-page")},dependencies:[o.z],encapsulation:2,changeDetection:0}),c})();const r=[{path:"",component:i,title:"EntityDefinition"}]}}]);