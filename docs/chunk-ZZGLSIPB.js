import{a as c}from"./chunk-EZW4NUV7.js";import"./chunk-7GUJMVXE.js";import"./chunk-XSZSWYID.js";import{a as n}from"./chunk-VPTAFHWF.js";import"./chunk-67ZAYPJZ.js";import"./chunk-GVGOLMJX.js";import{Ba as s,Fa as o,Wa as d,sb as i}from"./chunk-U3TFQBEX.js";import"./chunk-TWZW5B45.js";var p='<p class="ngde">Interface that describes a group of actions for a feature</p><h2 id="properties" href="internal-api/interfaces/internal-api/ActionGroup" headinglink="true" class="ngde">Properties<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="properties"></ng-doc-heading-anchor></h2><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-api-table sticky first-colum-highlighted ngde"><thead class="ngde"><tr indexable="false" class="ngde"><th class="ng-doc-api-table-name ngde">Name</th><th class="ng-doc-api-table-type ngde">Type</th><th class="ng-doc-api-table-description ngde">Description</th></tr></thead><tbody class="ngde"><tr class="ngde" data-slug="remove" data-slugtype="member" id="remove"><td indexable="false" class="ngde"><span class="ngde">remove</span><div class="ng-doc-node-details ngde"></div></td><td class="ng-doc-api-table-type ngde"><code indexable="false" class="ngde ng-doc-code-with-link">ActionCreator&#x3C;`[${any}] Remove`, (props: <a href="internal-api/interfaces/internal-api/IdsProp" class="ng-doc-code-anchor ngde">IdsProp</a>) => Action&#x3C;`[${any}] Remove`> &#x26; <a href="internal-api/interfaces/internal-api/IdsProp" class="ng-doc-code-anchor ngde">IdsProp</a>></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to remove rows represented by the IDs from the store.</p></td></tr><tr class="ngde" data-slug="storeRows" data-slugtype="member" id="storeRows"><td indexable="false" class="ngde"><span class="ngde">storeRows</span><div class="ng-doc-node-details ngde"></div></td><td class="ng-doc-api-table-type ngde"><code indexable="false" class="ngde ng-doc-code-with-link">ActionCreator&#x3C;`[${any}] Store Rows`, (props: <a href="internal-api/interfaces/internal-api/RowsProp" class="ng-doc-code-anchor ngde">RowsProp</a>&#x3C;T>) => Action&#x3C;`[${any}] Store Rows`> &#x26; <a href="internal-api/interfaces/internal-api/RowsProp" class="ng-doc-code-anchor ngde">RowsProp</a>&#x3C;T>></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to put rows into the store.</p></td></tr><tr class="ngde" data-slug="updateMany" data-slugtype="member" id="updateMany"><td indexable="false" class="ngde"><span class="ngde">updateMany</span><div class="ng-doc-node-details ngde"></div></td><td class="ng-doc-api-table-type ngde"><code indexable="false" class="ngde ng-doc-code-with-link">ActionCreator&#x3C;`[${any}] <a href="internal-api/classes/internal-api/Update" class="ng-doc-code-anchor ngde">Update</a> Many`, (props: <a href="internal-api/interfaces/internal-api/UpdateChanges" class="ng-doc-code-anchor ngde">UpdateChanges</a>&#x3C;T>) => Action&#x3C;`[${any}] <a href="internal-api/classes/internal-api/Update" class="ng-doc-code-anchor ngde">Update</a> Many`> &#x26; <a href="internal-api/interfaces/internal-api/UpdateChanges" class="ng-doc-code-anchor ngde">UpdateChanges</a>&#x3C;T>></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to update state with multiple changes at a time.</p></td></tr><tr class="ngde" data-slug="upsertRow" data-slugtype="member" id="upsertRow"><td indexable="false" class="ngde"><span class="ngde">upsertRow</span><div class="ng-doc-node-details ngde"></div></td><td class="ng-doc-api-table-type ngde"><code indexable="false" class="ngde ng-doc-code-with-link">ActionCreator&#x3C;`[${any}] Upsert Row`, (props: <a href="internal-api/interfaces/internal-api/RowProp" class="ng-doc-code-anchor ngde">RowProp</a>&#x3C;T>) => Action&#x3C;`[${any}] Upsert Row`> &#x26; <a href="internal-api/interfaces/internal-api/RowProp" class="ng-doc-code-anchor ngde">RowProp</a>&#x3C;T>></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to trigger upserting a new/existing row</p></td></tr></tbody></table></div>',t=class e extends n{constructor(){super();this.pageType="api";this.pageContent=p;this.editSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/edit/main/libs/smart-ngrx/src/types/action-group.interface.ts?message=docs(): describe your changes here...#L14";this.viewSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/blob/release/libs/smart-ngrx/src/types/action-group.interface.ts#L14"}static{this.\u0275fac=function(a){return new(a||e)}}static{this.\u0275cmp=s({type:e,selectors:[["ng-doc-page-e5kw2yih"]],features:[i([{provide:n,useExisting:e}]),o],decls:1,vars:0,template:function(a,h){a&1&&d(0,"ng-doc-page")},dependencies:[c],encapsulation:2,changeDetection:0})}},g=[{path:"",component:t,title:"ActionGroup"}],b=g;export{t as PageComponent,b as default};
