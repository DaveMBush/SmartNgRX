import{a as i}from"./chunk-ICC3I7U3.js";import"./chunk-3NO74SQX.js";import"./chunk-A7763QJH.js";import{a as s}from"./chunk-JHHDKBNU.js";import"./chunk-4NKWSBMZ.js";import"./chunk-PTJD77X5.js";import{Pa as o,S as d,lb as r,mb as c,za as t}from"./chunk-UDQB7DFD.js";import"./chunk-TWZW5B45.js";var l='<p class="ngde">Interface that describes a group of actions for a feature</p><h2 id="properties" href="api/interfaces/smart-ngrx/ActionGroup" headinglink="true" class="ngde">Properties<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="properties"></ng-doc-heading-anchor></h2><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-api-table sticky first-colum-highlighted ngde"><thead class="ngde"><tr indexable="false" class="ngde"><th class="ng-doc-api-table-name ngde">Name</th><th class="ng-doc-api-table-type ngde">Type</th><th class="ng-doc-api-table-description ngde">Description</th></tr></thead><tbody class="ngde"><tr class="ngde" data-slug="add" data-slugtype="member" id="add"><td indexable="false" class="ngde"><span class="ngde">add</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">ActionCreator&#x3C;`[${any}] Add`, (props: { row: T; feature: string; entity: string; parentId: string; parentFeature: string; parentEntityName: string; }) => Action&#x3C;`[${any}] Add`> &#x26; { row: T; feature: string; entity: string; parentId: string; parentFeature: string; parentEntityName: string; }></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to trigger adding a new row</p></td></tr><tr class="ngde" data-slug="addSuccess" data-slugtype="member" id="addSuccess"><td indexable="false" class="ngde"><span class="ngde">addSuccess</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">ActionCreator&#x3C;`[${any}] Add Success`, (props: { oldRow: T; newRow: T; feature: string; entity: string; parentId: string; parentFeature: string; parentEntityName: string; }) => Action&#x3C;`[${any}] Add Success`> &#x26; { oldRow: T; newRow: T; feature: string; entity: string; parentId: string; parentFeature: string; parentEntityName: string; }></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to trigger storing a new row</p></td></tr><tr class="ngde" data-slug="delete" data-slugtype="member" id="delete"><td indexable="false" class="ngde"><span class="ngde">delete</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">ActionCreator&#x3C;`[${any}] Delete`, (props: { id: string; parentInfo: { feature: string; entity: string; ids: string[]; }[]; }) => Action&#x3C;`[${any}] Delete`> &#x26; { id: string; parentInfo: { feature: string; entity: string; ids: string[]; }[]; }></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to trigger deleting a new row, this eventually calls the effect service which will handle the physical delete on the server.</p></td></tr><tr class="ngde" data-slug="loadByIds" data-slugtype="member" id="loadByIds"><td indexable="false" class="ngde"><span class="ngde">loadByIds</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde ng-doc-code-with-link">ActionCreator&#x3C;`[${any}] Load By Ids`, (props: <a href="api/interfaces/smart-ngrx/IdsProp" class="ng-doc-code-anchor ngde">IdsProp</a>) => Action&#x3C;`[${any}] Load By Ids`> &#x26; <a href="api/interfaces/smart-ngrx/IdsProp" class="ng-doc-code-anchor ngde">IdsProp</a>></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to load rows by their IDs.</p></td></tr><tr class="ngde" data-slug="loadByIndexes" data-slugtype="member" id="loadByIndexes"><td indexable="false" class="ngde"><span class="ngde">loadByIndexes</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde ng-doc-code-with-link">ActionCreator&#x3C;`[${any}] Load By Indexes`, (props: <a href="api/interfaces/smart-ngrx/IndexesProp" class="ng-doc-code-anchor ngde">IndexesProp</a>) => Action&#x3C;`[${any}] Load By Indexes`> &#x26; <a href="api/interfaces/smart-ngrx/IndexesProp" class="ng-doc-code-anchor ngde">IndexesProp</a>></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to load rows by their index.</p></td></tr><tr class="ngde" data-slug="remove" data-slugtype="member" id="remove"><td indexable="false" class="ngde"><span class="ngde">remove</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde ng-doc-code-with-link">ActionCreator&#x3C;`[${any}] Remove`, (props: <a href="api/interfaces/smart-ngrx/IdsProp" class="ng-doc-code-anchor ngde">IdsProp</a>) => Action&#x3C;`[${any}] Remove`> &#x26; <a href="api/interfaces/smart-ngrx/IdsProp" class="ng-doc-code-anchor ngde">IdsProp</a>></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to remove rows represented by the IDs from the store.</p></td></tr><tr class="ngde" data-slug="storeRows" data-slugtype="member" id="storeRows"><td indexable="false" class="ngde"><span class="ngde">storeRows</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde ng-doc-code-with-link">ActionCreator&#x3C;`[${any}] Store Rows`, (props: <a href="api/interfaces/smart-ngrx/RowsProp" class="ng-doc-code-anchor ngde">RowsProp</a>&#x3C;T>) => Action&#x3C;`[${any}] Store Rows`> &#x26; <a href="api/interfaces/smart-ngrx/RowsProp" class="ng-doc-code-anchor ngde">RowsProp</a>&#x3C;T>></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to put rows into the store.</p></td></tr><tr class="ngde" data-slug="update" data-slugtype="member" id="update"><td indexable="false" class="ngde"><span class="ngde">update</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde ng-doc-code-with-link">ActionCreator&#x3C;`[${any}] Update`, (props: { old: <a href="api/interfaces/smart-ngrx/RowProp" class="ng-doc-code-anchor ngde">RowProp</a>&#x3C;T>; new: <a href="api/interfaces/smart-ngrx/RowProp" class="ng-doc-code-anchor ngde">RowProp</a>&#x3C;T>; }) => Action&#x3C;`[${any}] Update`> &#x26; { old: <a href="api/interfaces/smart-ngrx/RowProp" class="ng-doc-code-anchor ngde">RowProp</a>&#x3C;T>; new: <a href="api/interfaces/smart-ngrx/RowProp" class="ng-doc-code-anchor ngde">RowProp</a>&#x3C;T>; }></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to update a row in the store. The old row is passed so we can roll back on failure.</p></td></tr><tr class="ngde" data-slug="updateMany" data-slugtype="member" id="updateMany"><td indexable="false" class="ngde"><span class="ngde">updateMany</span><div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde ng-doc-code-with-link">ActionCreator&#x3C;`[${any}] Update Many`, (props: <a href="api/interfaces/smart-ngrx/UpdateChanges" class="ng-doc-code-anchor ngde">UpdateChanges</a>&#x3C;T>) => Action&#x3C;`[${any}] Update Many`> &#x26; <a href="api/interfaces/smart-ngrx/UpdateChanges" class="ng-doc-code-anchor ngde">UpdateChanges</a>&#x3C;T>></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Action to update state with multiple changes at a time.</p></td></tr></tbody></table></div>',n=class e extends s{constructor(){super();this.pageType="api";this.pageContent=l;this.editSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/edit/main/libs/smart-ngrx/src/actions/action-group.interface.ts?message=docs(): describe your changes here...#L16";this.viewSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/blob/release/libs/smart-ngrx/src/actions/action-group.interface.ts#L16"}static{this.\u0275fac=function(a){return new(a||e)}}static{this.\u0275cmp=d({type:e,selectors:[["ng-doc-page-r8slie04"]],standalone:!0,features:[r([{provide:s,useExisting:e}]),t,c],decls:1,vars:0,template:function(a,h){a&1&&o(0,"ng-doc-page")},dependencies:[i],encapsulation:2,changeDetection:0})}},p=[{path:"",component:n,title:"ActionGroup"}],v=p;export{n as PageComponent,v as default};
