import{a as c}from"./chunk-YN5MAOKI.js";import"./chunk-KNGISJ5E.js";import"./chunk-QASFK7WI.js";import{a}from"./chunk-I6DDVD3S.js";import"./chunk-QKSOPKFJ.js";import"./chunk-76ETPZPA.js";import{Ba as i,Fa as o,Wa as t,sb as l}from"./chunk-COWQBK44.js";import"./chunk-TWZW5B45.js";var d=`<p class="ngde">This is an internal function documented here for reference by people doing development on this library.</p><p class="ngde">Asserts that a value is true. You should only use one condition at a time. If you are working with a value that should always be true, this is easier than putting if(condition) around what you are going to use the condition for.</p><h2 id="example" href="public-api/functions/public-api/assert" headinglink="true" class="ngde">Example<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="example"></ng-doc-heading-anchor></h2><h3 id="instead-of-this" href="public-api/functions/public-api/assert" headinglink="true" class="ngde">instead of this:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="instead-of-this"></ng-doc-heading-anchor></h3><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">let</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> variableWeExpectWilNotBeNullOrUndefined</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> SomeType</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// somewhere in here we set the variable</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">if</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(variableWeExpectWilNotBeNullOrUndefined) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">  return</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde"> // or throw an exception or whatever</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// now use the variable without having to use ? or ! everywhere</span></span></code></pre><h3 id="do-this" href="public-api/functions/public-api/assert" headinglink="true" class="ngde">do this:<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="do-this"></ng-doc-heading-anchor></h3><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">let</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> variableWeExpectWilNotBeNullOrUndefined</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> SomeType</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// somewhere in here we set the variable</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"><a href="public-api/functions/public-api/assert" class="ng-doc-code-anchor ngde">assert</a></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(variableWeExpectWilNotBeNullOrUndefined</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> 'variableWeExpectWilNotBeNullOrUndefined'</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// now use the variable without having to use ? or ! everywhere</span></span></code></pre><h2 id="presentation" href="public-api/functions/public-api/assert" headinglink="true" class="ngde">Presentation<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="presentation"></ng-doc-heading-anchor></h2><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">function</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> <a href="public-api/functions/public-api/assert" class="ng-doc-code-anchor ngde">assert</a></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde">condition</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> boolean</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde"> context</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> string</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> void</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span></code></pre><h2 id="returns" href="public-api/functions/public-api/assert" headinglink="true" class="ngde">Returns<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="returns"></ng-doc-heading-anchor></h2><div class="ng-doc-returns ngde"><code indexable="false" class="ngde">void</code></div><h2 id="parameters" href="public-api/functions/public-api/assert" headinglink="true" class="ngde">Parameters<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="parameters"></ng-doc-heading-anchor></h2><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-api-table ngde"><thead class="ngde"><tr indexable="false" class="ngde"><th class="ngde">Name</th><th class="ngde">Type</th><th class="ngde">Description</th></tr></thead><tbody class="ngde"><tr class="ngde"><td indexable="false" class="ngde">condition<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">boolean</code></td><td class="ngde"><p class="ngde">@param condition condition to check</p></td></tr><tr class="ngde"><td indexable="false" class="ngde">context<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">string</code></td><td class="ngde"><p class="ngde">@param context description of what we checked. If you put a GUID in the string it will make it easier to find the error in the source code.</p></td></tr></tbody></table></div>`,n=class s extends a{constructor(){super();this.pageType="api";this.pageContent=d;this.editSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/edit/main/libs/smart-ngrx/src/common/assert.function.ts?message=docs(): describe your changes here...#L35";this.viewSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/blob/release/libs/smart-ngrx/src/common/assert.function.ts#L35"}static{this.\u0275fac=function(e){return new(e||s)}}static{this.\u0275cmp=i({type:s,selectors:[["ng-doc-page-hdnbjxtm"]],features:[l([{provide:a,useExisting:s}]),o],decls:1,vars:0,template:function(e,g){e&1&&t(0,"ng-doc-page")},dependencies:[c],encapsulation:2,changeDetection:0})}},p=[{path:"",component:n,title:"assert"}],b=p;export{n as PageComponent,b as default};
