"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9104],{9104:(u,l,s)=>{s.r(l),s.d(l,{DynamicComponent:()=>p,default:()=>j});var t=s(8965),o=s(1514),i=s(6925);const a={title:"Injection Token",mdFile:"./index.md",order:3,category:s(493).Z},g=[],r={};var n=s(5825);let p=(()=>{class e extends t.a{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent='<h1 id="injection-token" class="ngde">Injection Token<a title="Link to heading" class="ng-doc-header-link ngde" href="/using-smart-ng-rx/injection-token#injection-token"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><p class="ngde">For each service, you\'ll need to create an Injection Token.</p><p class="ngde">Continuing with the example of a <code class="ngde">UserEffectsService</code>, we\'ll create an Injection Token for it.</p><pre class="ngde hljs"><code class="hljs language-typescript code-lines ngde" lang="typescript" name="" icon="" highlightedlines="[]"><span class="line ngde"><span class="hljs-keyword ngde">import</span> { <span class="hljs-title class_ ngde">InjectionToken</span> } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">\'@angular/core\'</span>;\n</span><span class="line ngde">\n</span><span class="line ngde"><span class="hljs-keyword ngde">import</span> { <span class="hljs-title class_ ngde">UserEffectsService</span> } <span class="hljs-keyword ngde">from</span> <span class="hljs-string ngde">\'./department-effects.service\'</span>;\n</span><span class="line ngde">\n</span><span class="line ngde"><span class="hljs-keyword ngde">export</span> <span class="hljs-keyword ngde">const</span> userEffectsServiceToken = <span class="hljs-keyword ngde">new</span> <span class="hljs-title class_ ngde">InjectionToken</span>&#x3C;<span class="hljs-title class_ ngde">UserEffectsService</span>>(<span class="hljs-string ngde">\'UserEffectsService\'</span>);\n</span></code></pre><p class="ngde">Which we can use to register the service in our module:</p><pre class="ngde hljs"><code class="hljs language-typescript code-lines ngde" lang="typescript" name="" icon="" highlightedlines="[]"><span class="line ngde"><span class="hljs-meta ngde">@NgModule</span>({\n</span><span class="line ngde">  <span class="hljs-attr ngde">imports</span>: [\n</span><span class="line ngde">    <span class="hljs-comment ngde">// ...</span>\n</span><span class="line ngde">  ],\n</span><span class="line ngde">  <span class="hljs-attr ngde">providers</span>: [\n</span><span class="line ngde">    <span class="hljs-comment ngde">// ...</span>\n</span><span class="line ngde">    {\n</span><span class="line ngde">      <span class="hljs-attr ngde">provide</span>: userEffectsServiceToken,\n</span><span class="line ngde">      <span class="hljs-attr ngde">useClass</span>: <span class="hljs-title class_ ngde">UserEffectsService</span>,\n</span><span class="line ngde">    },\n</span><span class="line ngde">    <span class="hljs-comment ngde">// ...</span>\n</span><span class="line ngde">  ],\n</span><span class="line ngde">  <span class="hljs-comment ngde">// ...</span>\n</span><span class="line ngde">})\n</span><span class="line ngde"><span class="hljs-keyword ngde">export</span> <span class="hljs-keyword ngde">class</span> <span class="hljs-title class_ ngde">SharedModule</span> {}\n</span></code></pre>',this.page=a,this.demoAssets=r}static#s=this.\u0275fac=function(c){return new(c||e)};static#n=this.\u0275cmp=n.Xpm({type:e,selectors:[["ng-doc-page-using-smart-ng-rx-injection-token"]],standalone:!0,features:[n._Bn([{provide:t.a,useExisting:e},g,a.providers??[]]),n.qOj,n.jDz],decls:1,vars:0,template:function(c,T){1&c&&n._UZ(0,"ng-doc-page")},dependencies:[o.z],encapsulation:2,changeDetection:0})}return e})();const j=[{...(0,i.isRoute)(a.route)?a.route:{},path:"",component:p,title:"Injection Token"}]}}]);