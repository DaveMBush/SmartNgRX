import{a as l}from"./chunk-YWRD4FHU.js";import"./chunk-WDR7ZGDV.js";import{a as t}from"./chunk-RVP6FOET.js";import{L as a,Qa as c,Ra as o,ia as d,va as i}from"./chunk-ECT43PI4.js";import"./chunk-JPKLQMV2.js";var r=`<header class="ngde"><div class="ng-doc-page-tags ngde"><span class="ng-doc-tag ngde" indexable="false" data-content="ng-doc-scope">smart-ngrx</span> <span class="ng-doc-inline-delimiter ngde" indexable="false">/</span> <span class="ng-doc-tag ngde" indexable="false" data-content="Function">Function</span></div><h1 id="updateentity" class="ngde">updateEntity<a title="Link to heading" class="ng-doc-header-link ngde" href="/api/smart-ngrx/functions/updateEntity#updateentity"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1></header><section class="ngde"><p class="ngde">Use this function to update the rows represented by the ids for an entity in a feature in response to a websocket event indicating the row has been updated.</p></section><section class="ngde"><h2 id="presentation" class="ngde">Presentation<a title="Link to heading" class="ng-doc-header-link ngde" href="/api/smart-ngrx/functions/updateEntity#presentation"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><pre class="ngde hljs"><code lang="typescript" class="hljs language-typescript code-lines ngde"><span class="line ngde"><span class="hljs-keyword ngde">function</span> <span class="hljs-title function_ ngde"><a href="/api/smart-ngrx/functions/updateEntity" class="ng-doc-code-anchor ngde" data-link-type="Function" class="ngde">updateEntity</a></span>(<span class="hljs-params ngde">feature: <span class="hljs-built_in ngde">string</span>, entity: <span class="hljs-built_in ngde">string</span>, ids: <span class="hljs-built_in ngde">string</span>[]</span>): <span class="hljs-built_in ngde">void</span>;
</span></code></pre></section><section class="ngde"><h2 id="parameters" class="ngde">Parameters<a title="Link to heading" class="ng-doc-header-link ngde" href="/api/smart-ngrx/functions/updateEntity#parameters"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-parameters-table ngde"><thead class="ngde"><tr indexable="false" class="ngde"><th class="ng-doc-parameters-table-name ngde">Name</th><th class="ng-doc-parameters-table-type ngde">Type</th><th class="ng-doc-parameters-table-description ngde">Description</th></tr></thead><tbody class="ngde"><tr class="ngde"><td indexable="false" class="ngde">feature<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">string</code></td><td class="ngde"><p class="ngde">The feature the entity is in.</p></td></tr><tr class="ngde"><td indexable="false" class="ngde">entity<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">string</code></td><td class="ngde"><p class="ngde">The entity to update.</p></td></tr><tr class="ngde"><td indexable="false" class="ngde">ids<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">string[]</code></td><td class="ngde"><p class="ngde">The ids of the rows that need to be refreshed.</p></td></tr></tbody></table></div></section>`,p=(()=>{let e=class e extends t{constructor(){super(),this.routePrefix=void 0,this.pageType="api",this.pageContent=r,this.demo=void 0,this.demoAssets=void 0}};e.\u0275fac=function(s){return new(s||e)},e.\u0275cmp=a({type:e,selectors:[["ng-doc-page-api-smart-ngrx-functions-update-entity"]],standalone:!0,features:[c([{provide:t,useExisting:e}]),d,o],decls:1,vars:0,template:function(s,u){s&1&&i(0,"ng-doc-page")},dependencies:[l],encapsulation:2,changeDetection:0});let n=e;return n})(),h=[{path:"",component:p,title:"updateEntity"}],y=h;export{p as DynamicComponent,y as default};
