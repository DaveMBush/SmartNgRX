import{a as k}from"./chunk-U3UAU76Y.js";import"./chunk-C5SIYBOV.js";import{a as p}from"./chunk-J5WSNC3N.js";import"./chunk-T2TPJYPD.js";import"./chunk-GSP52HBJ.js";import{a as e}from"./chunk-D5VJN27U.js";import{X as D}from"./chunk-WOBS4B3T.js";import"./chunk-XH3XHKSK.js";import{Ba as r,Fa as d,Wa as t,sb as c}from"./chunk-AVEIMZJF.js";import{a as i,b as o,h as F}from"./chunk-TWZW5B45.js";var B=F(D());var E={title:"Virtual IDs",mdFile:"./index.md",order:2,category:k},s=E;var g=[];var m={},h=m;var f=`<h1 id="virtual-ids" href="using-smart-ng-rx/crud-support/virtual-ids" headinglink="true" class="ngde">Virtual IDs<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="virtual-ids"></ng-doc-heading-anchor></h1><h2 id="introduction" href="using-smart-ng-rx/crud-support/virtual-ids" headinglink="true" class="ngde">Introduction<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="introduction"></ng-doc-heading-anchor></h2><p class="ngde">As we already discussed in our section on <a href="using-smart-ng-rx/child-fields" class="ngde">Child Fields</a>, a child field is a field that is defined on a component that points to other rows in another entity. It does this either by using a list of ids that we then use to fetch the rows from the entity. If we don't yet have the rows in the store, Smart NgRX will automatically fetch them for you.</p><p class="ngde">One type of child field is the <code class="ngde ng-doc-code-with-link"><a href="smart-signals-api/interfaces/smart-signals-api/PartialArrayDefinition" class="ng-doc-code-anchor ngde">PartialArrayDefinition</a></code>. This is used when you have a long list of children, but you don't want to fetch all the IDs at once. Instead, you can return a <code class="ngde ng-doc-code-with-link"><a href="smart-signals-api/interfaces/smart-signals-api/PartialArrayDefinition" class="ng-doc-code-anchor ngde">PartialArrayDefinition</a></code> from your <code class="ngde ng-doc-code-with-link"><a href="smart-signals-api/classes/smart-signals-api/EffectService" class="ng-doc-code-anchor ngde">EffectService</a></code>. This tells SmartNgRX that you are using a virtual array and will provide the IDs in chunks as you request them.</p><p class="ngde">But, how do you retrieve the additional IDs when you need them?</p><p class="ngde">For this, there is a method in the <code class="ngde ng-doc-code-with-link"><a href="smart-signals-api/classes/smart-signals-api/EffectService" class="ng-doc-code-anchor ngde">EffectService</a></code> called <code class="ngde">loadByIndexes</code>. This method takes a <code class="ngde">parentId</code>, a <code class="ngde">childField</code>, a <code class="ngde">startIndex</code> and a <code class="ngde">length</code>. This gives you the information you need to retrieve the next chunk of IDs.</p><p class="ngde">The method should then return an observable of a <code class="ngde ng-doc-code-with-link"><a href="smart-signals-api/interfaces/smart-signals-api/PartialArrayDefinition" class="ng-doc-code-anchor ngde">PartialArrayDefinition</a></code>. This <code class="ngde ng-doc-code-with-link"><a href="smart-signals-api/interfaces/smart-signals-api/PartialArrayDefinition" class="ng-doc-code-anchor ngde">PartialArrayDefinition</a></code> will contain the <code class="ngde">indexes</code> field which is an array of the IDs that were requested and the <code class="ngde">length</code> property is the total length of the array that will eventually be in the child field.</p><h2 id="sample-code" href="using-smart-ng-rx/crud-support/virtual-ids" headinglink="true" class="ngde">Sample Code<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="sample-code"></ng-doc-heading-anchor></h2><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  override </span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">loadByIndexes</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    parentId: string</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    childField: string</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    startIndex: number</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    length: number</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  ): Observable</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">&#x3C;</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"><a href="smart-signals-api/interfaces/smart-signals-api/PartialArrayDefinition" class="ng-doc-code-anchor ngde">PartialArrayDefinition</a></span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    return this.http.post&#x3C;<a href="smart-signals-api/interfaces/smart-signals-api/PartialArrayDefinition" class="ng-doc-code-anchor ngde">PartialArrayDefinition</a>>(</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">      \`</span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">\${</span><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">this</span><span style="color:#032F62;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">apiDepartments</span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">}</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">/indexes\`</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        parentId</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        childField</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        startIndex</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        length</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      }</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    );</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  }</span></span></code></pre><p class="ngde">I realize that doesn't show you much because most of the work is done in the database. So, here's the Prisma, server side code, that does most of the work.</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#24292E;--shiki-dark:#E6B673" class="ngde">  @</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">Post</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">'indexes'</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  async </span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">getByIndexes</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    @</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">Body</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    definition: {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      parentId</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> string;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      childField: string;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      startIndex: number;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      length: number;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    }</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  ): </span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde">Promise</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;{</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    /** starting index for the ids to be filled into the virtual array */</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">    startIndex</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> number</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    /** the ids to put into the virtual array */</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">    indexes</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> string</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">[]</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    /** the total number of ids in the virtual array */</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">    length</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> number</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  }> {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    // there is only one child field so we can ignore that.</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    const result </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> await</span><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde"> this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">prisma</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">$queryRaw</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">\`SELECT id from (</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">SELECT folders.departmentId, ('folders:' || folders.id) as id, folders.created FROM folders</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">UNION ALL SELECT docs.departmentId, ('docs:' || docs.did) as id, docs.created FROM docs</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">UNION ALL SELECT sprintFolders.departmentId, ('sprint-folders:' || sprintFolders.id) as id, sprintFolders.created FROM sprintFolders</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">UNION ALL SELECT lists.departmentId, ('lists:' || lists.id) as id, lists.created from lists)</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">WHERE departmentId = </span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">\${</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">definition</span><span style="color:#032F62;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">parentId</span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">}</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">ORDER BY created</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">LIMIT </span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">\${</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">definition</span><span style="color:#032F62;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#005CC5;--shiki-dark:#BFBDB6" class="ngde">length</span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">}</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> OFFSET </span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">\${</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">definition</span><span style="color:#032F62;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">startIndex</span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">}</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">;\`</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    const total </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> await</span><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde"> this</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">prisma</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">$queryRaw</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">\`SELECT count(*) as total from (</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">SELECT folders.departmentId FROM folders</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">UNION ALL SELECT docs.departmentId FROM docs</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">UNION ALL SELECT sprintFolders.departmentId FROM sprintFolders</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">UNION ALL SELECT lists.departmentId from lists)</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">WHERE departmentId = </span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">\${</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">definition</span><span style="color:#032F62;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">parentId</span><span style="color:#032F62;--shiki-dark:#FF8F40" class="ngde">}</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">;\`</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    // use Number to convert BigInt</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    return {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">      indexes</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> (result </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">as</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { </span><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">id</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> string</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> }[])</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">map</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">((</span><span style="color:#E36209;--shiki-dark:#D2A6FF" class="ngde">i</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">) </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">=></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> i</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">id)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">      startIndex</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> Number</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(definition</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">startIndex)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">      length</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">:</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> Number</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">((total </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">as</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { </span><span style="color:#E36209;--shiki-dark:#BFBDB6" class="ngde">total</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">:</span><span style="color:#005CC5;--shiki-dark:#39BAE6" class="ngde"> unknown</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> }[])[</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde">0</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">]</span><span style="color:#24292E;--shiki-dark:#F29668" class="ngde">.</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">total)</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    };</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  }</span></span></code></pre>`,l=class a extends e{constructor(){super();this.pageType="guide";this.pageContent=f;this.editSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/edit/main/apps/documentation/src/app/using-smart-ng-rx/crud-support/virtual-ids/index.md?message=docs(): describe your changes here...";this.viewSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/blob/release/apps/documentation/src/app/using-smart-ng-rx/crud-support/virtual-ids/index.md";this.page=s;this.demoAssets=h}static{this.\u0275fac=function(n){return new(n||a)}}static{this.\u0275cmp=r({type:a,selectors:[["ng-doc-page-gj4311t8"]],features:[c([{provide:e,useExisting:a},g,s.providers??[]]),d],decls:1,vars:0,template:function(n,C){n&1&&t(0,"ng-doc-page")},dependencies:[p],encapsulation:2,changeDetection:0})}},u=[o(i({},(0,B.isRoute)(s.route)?s.route:{}),{path:"",component:l,title:"Virtual IDs"})],V=u;export{l as PageComponent,V as default};
