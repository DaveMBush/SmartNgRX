import{a as h}from"./chunk-CG3MNAEL.js";import"./chunk-3FR5PQZO.js";import"./chunk-T4WX5D76.js";import{a as t}from"./chunk-LSIHCBJT.js";import"./chunk-PZEHRWLK.js";import{X as b}from"./chunk-CQLVC7LO.js";import{Qa as l,pb as d,ta as c,xa as r}from"./chunk-JNJDPWAB.js";import{a as n,b as i,h as f}from"./chunk-TWZW5B45.js";var u=f(b());var y={title:"Home",mdFile:"./index.md",order:1},s=y;var g=[];var k={},p=k;var w=`<h1 id="smartngrx" href="home" headinglink="true" class="ngde">SmartNgRX<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="smartngrx"></ng-doc-heading-anchor></h1><p class="ngde"><img src="https://img.shields.io/npm/v/%40smarttools%2Fsmart-ngrx" alt="NPM Version" class="ngde"> <a href="https://opensource.org/licenses/MIT" class="ngde"><img src="https://img.shields.io/badge/License-MIT-yellow.svg" alt="License: MIT" class="ngde"></a> <img src="https://github.com/DaveMBush/SmartNgRX/actions/workflows/build.yml/badge.svg" alt="example workflow" class="ngde"> <a href="https://davembush.github.io/SmartNgRX/" title="Go to project documentation" class="ngde"><img src="https://img.shields.io/badge/View-Documentation-2ea44f" alt="View - Documentation" class="ngde"></a> <a href="https://angular.dev/" class="ngde"><img src="https://img.shields.io/badge/Angular-20-2ea44f" alt="Angular - 20" class="ngde"></a> <a href="https://ngrx.io/guide/store" class="ngde"><img src="https://img.shields.io/badge/NgRX-19-2ea44f" alt="NgRX - 19" class="ngde"></a> <img src="https://img.shields.io/badge/Branch%20Coverage-100%25-2ea44f?style=plastic&#x26;logoSize=auto" alt="Branch Coverage" class="ngde"> <img src="https://img.shields.io/coderabbit/prs/github/DaveMBush/SmartNgRX" alt="CodeRabbit Pull Request Reviews" class="ngde"></p><h2 id="what-is-smartngrx" href="home" headinglink="true" class="ngde">What is SmartNgRX?<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="what-is-smartngrx"></ng-doc-heading-anchor></h2><p class="ngde">SmartNgRX is a set of libraries that hide most of NgRX and SignalStore from the developer for CRUD operations while still using NgRX under the hood and allowing you to use it with existing NgRX code. It not only supports CRUD but also implements optimistic UI for updates and deletes. Below is a list of features we have implemented so far (checked) along with some of our dreams (unchecked):</p><ul class="ngde"><li class="ngde"><input checked disabled type="checkbox" class="ngde"> Eliminate NgRX boiler-plate code.</li><li class="ngde"><input checked disabled type="checkbox" class="ngde"> Dynamically generate Actions, Reducers and Effects.</li><li class="ngde"><input checked disabled type="checkbox" class="ngde"> Complete CRUD support.</li><li class="ngde"><input checked disabled type="checkbox" class="ngde"> Provide optimistic UI natively</li><li class="ngde"><input checked disabled type="checkbox" class="ngde"> Optionally remove unused entity rows from the store if they are no longer being used.</li><li class="ngde"><input checked disabled type="checkbox" class="ngde"> Optionally allow data to refresh if it is currently being displayed.</li><li class="ngde"><input checked disabled type="checkbox" class="ngde"> Allow this to work with other NgRX implementations or use only this implementation as desired or needed.</li><li class="ngde"><input checked disabled type="checkbox" class="ngde"> Provide multiple ways to retrieve child rows.<ul class="ngde"><li class="ngde"><input checked disabled type="checkbox" class="ngde"> For small sets of nested data, provide the IDs of the child elements in an array of the parent.</li><li class="ngde"><input checked disabled type="checkbox" class="ngde"> For larger sets of nested data, provide another mechanism that will allow for "paging" the rows.</li></ul></li><li class="ngde"><input checked disabled type="checkbox" class="ngde"> Allow this to work with code that has to account for write lag on the server (you can control this by using the Effects Service you have complete control over).</li><li class="ngde"><input checked disabled type="checkbox" class="ngde"> Allow the server to notify this code via websockets (or any future server-side notification) that a row needs to be updated and have the code automatically refresh if the row is currently rendered someplace.</li><li class="ngde"><input disabled type="checkbox" class="ngde"> Provide hooks that allow the client to tell the server what rows/entities it is interested in hearing about changes for.</li><li class="ngde"><input checked disabled type="checkbox" class="ngde"> Use Signals, as an alternative, under the hood instead of Observables to allow for better performance and less memory usage.</li></ul><p class="ngde">The project is broken into three libraries.</p><ul class="ngde"><li class="ngde">@smarttools/smart-core holds all the common code that the other two make use of</li><li class="ngde">@smarttools/smart-ngrx is the implementation that uses classic NgRX under the hood</li><li class="ngde">@smarttools/smart-signals is the implementation that uses NgRX SignalStore under the hood</li></ul><p class="ngde">More details are in our <a href="https://davembush.github.io/SmartNgRX/" class="ngde">documentation</a>.</p><h2 id="but-how-fast-is-it" href="home" headinglink="true" class="ngde">But How Fast Is It?<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="but-how-fast-is-it"></ng-doc-heading-anchor></h2><p class="ngde">Click the image below to see a video of SmartNgRX in action.</p><p class="ngde"><a href="https://www.youtube.com/watch?v=xA8jEnNA4V0" class="ngde"><img src="https://img.youtube.com/vi/xA8jEnNA4V0/0.jpg" alt="How Fast Is SmartNgRX?" class="ngde"></a></p><h2 id="installation" href="home" headinglink="true" class="ngde">Installation<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="installation"></ng-doc-heading-anchor></h2><p class="ngde">To install the classic NgRX version of this library, run:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-bash"><span class="line"><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">npm</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> install</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> @smarttools/smart-ngrx</span></span></code></pre><p class="ngde">for the SignalsStore version of the library, run:</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-bash"><span class="line"><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">npm</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> install</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> @smarttools/smart-signals</span></span></code></pre><h2 id="history" href="home" headinglink="true" class="ngde">History<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="history"></ng-doc-heading-anchor></h2><p class="ngde">This project merges two concepts I've been playing with for a while.</p><p class="ngde">At one of my previous jobs, I needed to work with data that could be essentially an infinite number of rows. This made retrieving the entire data set practically impossible and required that we not only use virtual scrolling to render the data but also use a concept of virtual data where we only retrieved the data that was needed to render the current view.</p><p class="ngde">Fast forward to a similar situation and a lot more experience. One of the issues with the previous implementation was that I had to retrieve the data every time it scrolled into view. As you can imagine, even with the fastest retrieval times, this didn't paint nearly as fast as anyone would have liked. This time, we had more control over the data. It was still a large data set. But it was not infinite.</p><p class="ngde">As we were in a meeting one day with everyone discussing various ways we could make the application perform better, I said, "Let me tell you what I've been thinking about." I proceeded to lay out a concept based on my earlier work where we'd only load the rows as we needed them AND remove them once we had some assurance they were no longer being used.</p><p class="ngde">I was then told to go work on a POC for that concept and got far enough to know I was on to something but not far enough to solve all the issues we were going to run into.</p><p class="ngde">Meanwhile, new management came in that talked the original manager out of working on this at this time and I was told to work on other things. I'm not complaining. While I wish I could have continued working on this, this was the right decision for the company.</p><p class="ngde">Now, I couldn't let it go. I kept thinking about it. And another thought came to mind. If we always use essentially the same Actions, Effects and Reducers for each entity, could we just create factory methods that would generate them for us? And if we could do that, could we hide the bulk of what is NgRX from the developer?</p><p class="ngde">At this point, I merged the two concepts. Using the main library of this project, you can register your NgRX entities in a providers section and then use "SmartSelectors" to join the data back together again. Only the join doesn't just join the data, it retrieves the data as it is accessed.</p><p class="ngde">Have a look at our "Ultimate Goals" to see where we are headed and how much we've completed so far.</p><h2 id="documentation" href="home" headinglink="true" class="ngde">Documentation<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="documentation"></ng-doc-heading-anchor></h2><p class="ngde">All the documentation can be found at <a href="https://davembush.github.io/SmartNgRX/" class="ngde">SmartNgRX Documentation</a></p><h2 id="how-to-run-the-main-projects" href="home" headinglink="true" class="ngde">How to run the main projects<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="how-to-run-the-main-projects"></ng-doc-heading-anchor></h2><h3 id="prerequisites" href="home" headinglink="true" class="ngde">Prerequisites<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="prerequisites"></ng-doc-heading-anchor></h3><ul class="ngde"><li class="ngde"><a href="https://nodejs.org/en/" class="ngde">NodeJS</a> - ^18.10.0 || ^20.0.0</li><li class="ngde"><a href="https://pnpm.io/" class="ngde">pnpm</a> - ^8</li></ul><h3 id="steps" href="home" headinglink="true" class="ngde">Steps<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="steps"></ng-doc-heading-anchor></h3><ul class="ngde"><li class="ngde">Checkout the project</li><li class="ngde">Run <code class="ngde">pnpm i</code><ul class="ngde"><li class="ngde">The first time you run <code class="ngde">pnpm i</code>, it will take a while to complete. This is because, as part of the installation process, we also seed the database with enough data to demonstrate virtual arrays.</li></ul></li><li class="ngde">start the server with <code class="ngde">pnpm run start:server</code></li><li class="ngde">start the client with <code class="ngde">pnpm run start</code></li><li class="ngde">open a browser to <code class="ngde">http://localhost:4200</code></li></ul><ng-doc-blockquote class="ngde"><p class="ngde">[!NOTE] If you get an error about file watcher running out of file handles, you may need to increase the number of file handles available to the system. In Ubuntu and similar linux systems, including WSL, you can do this by running:</p></ng-doc-blockquote><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-bash"><span class="line"><span style="color:#005CC5;--shiki-dark:#F07178" class="ngde">echo</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> fs.inotify.max_user_watches=</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde">524288</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> |</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> sudo</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> tee</span><span style="color:#005CC5;--shiki-dark:#95E6CB" class="ngde"> -a</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> /etc/sysctl.conf</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde"> &#x26;&#x26;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> sudo</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> sysctl</span><span style="color:#005CC5;--shiki-dark:#95E6CB" class="ngde"> -p</span></span></code></pre><h2 id="how-to-run-the-documentation-project" href="home" headinglink="true" class="ngde">How to run the documentation project<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="how-to-run-the-documentation-project"></ng-doc-heading-anchor></h2><ul class="ngde"><li class="ngde">Checkout the project (if you haven't already)</li><li class="ngde">Run <code class="ngde">pnpm i</code> (if you haven't already)</li><li class="ngde">start the documentation server with <code class="ngde">pnpm run start:documentation</code></li><li class="ngde">open a browser to <code class="ngde">http://localhost:4201</code></li></ul><h2 id="participating" href="home" headinglink="true" class="ngde">Participating<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="participating"></ng-doc-heading-anchor></h2><h3 id="code-of-conduct" href="home" headinglink="true" class="ngde"><a href="https://github.com/DaveMBush/SmartNgRX/blob/main/CODE_OF_CONDUCT.md" class="ngde">Code of Conduct</a><ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="code-of-conduct"></ng-doc-heading-anchor></h3><h3 id="contributing" href="home" headinglink="true" class="ngde"><a href="https://github.com/DaveMBush/SmartNgRX/blob/main/CONTRIBUTING.md" class="ngde">Contributing</a><ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="contributing"></ng-doc-heading-anchor></h3>`,e=class e extends t{constructor(){super();this.pageType="guide";this.pageContent=w;this.editSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/edit/main/apps/documentation/src/app/home/index.md?message=docs(): describe your changes here...";this.viewSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/blob/release/apps/documentation/src/app/home/index.md";this.page=s;this.demoAssets=p}};e.\u0275fac=function(a){return new(a||e)},e.\u0275cmp=c({type:e,selectors:[["ng-doc-page-z6yepaqg"]],features:[d([{provide:t,useExisting:e},g,s.providers??[]]),r],decls:1,vars:0,template:function(a,N){a&1&&l(0,"ng-doc-page")},dependencies:[h],encapsulation:2,changeDetection:0});var o=e,v=[i(n({},(0,u.isRoute)(s.route)?s.route:{}),{path:"",component:o,title:"Home"})],E=v;export{o as PageComponent,E as default};
