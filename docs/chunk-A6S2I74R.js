import{a as c}from"./chunk-EZW4NUV7.js";import"./chunk-7GUJMVXE.js";import"./chunk-XSZSWYID.js";import{a}from"./chunk-VPTAFHWF.js";import"./chunk-67ZAYPJZ.js";import"./chunk-GVGOLMJX.js";import{Ba as d,Fa as n,Wa as i,sb as l}from"./chunk-U3TFQBEX.js";import"./chunk-TWZW5B45.js";var r=`<p class="ngde">This is the interface that is used to define the entity for the provideSmartFeatureEntities provider function</p><h2 id="properties" href="smart-ngrx-api/interfaces/smart-ngrx-api/SmartEntityDefinition" headinglink="true" class="ngde">Properties<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="properties"></ng-doc-heading-anchor></h2><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-api-table sticky first-colum-highlighted ngde"><thead class="ngde"><tr indexable="false" class="ngde"><th class="ng-doc-api-table-name ngde">Name</th><th class="ng-doc-api-table-type ngde">Type</th><th class="ng-doc-api-table-description ngde">Description</th></tr></thead><tbody class="ngde"><tr class="ngde" data-slug="effectServiceToken" data-slugtype="member" id="effectServiceToken"><td indexable="false" class="ngde"><span class="ngde">effectServiceToken</span><div class="ng-doc-node-details ngde"></div></td><td class="ng-doc-api-table-type ngde"><code indexable="false" class="ngde ng-doc-code-with-link"><a href="internal-api/type-aliases/internal-api/EffectServiceToken" class="ng-doc-code-anchor ngde">EffectServiceToken</a>&#x3C;Row></code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">This is the service token related to the service the effect for this entity should call to do CRUD operations against the backend.</p></td></tr><tr class="ngde" data-slug="entityName" data-slugtype="member" id="entityName"><td indexable="false" class="ngde"><span class="ngde">entityName</span><div class="ng-doc-node-details ngde"></div></td><td class="ng-doc-api-table-type ngde"><code indexable="false" class="ngde">string</code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">The entity name that you'd usually use in the reducer object you'd use in StoreModule.forFeature(featureName, reducer) OR the name you'd use in provideState(featureName, reducer)</p><p class="ngde">We also use this name along with the feature as the Source field in actions but this should not matter to you because you'll either be using actions we've created or using your own actions for your specific purposes.</p></td></tr><tr class="ngde" data-slug="isInitialRow" data-slugtype="member" id="isInitialRow"><td indexable="false" class="ngde"><span class="ngde">isInitialRow</span><div class="ng-doc-node-details ngde"></div></td><td class="ng-doc-api-table-type ngde"><code indexable="false" class="ngde">boolean | undefined</code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">If this is true, the assumption is that this is the top level row that has an ID and child fields that hold the IDs of the children. There can be multiple top level rows and each should have at least one child field for it to be useful.</p><p class="ngde">When this is true, the loadById action will be fired with one element of value '1' the effectService will be called with this array where you can make a call to the backend to get the IDs for the child fields.</p></td></tr><tr class="ngde" data-slug="isSignal" data-slugtype="member" id="isSignal"><td indexable="false" class="ngde"><span class="ngde">isSignal</span><div class="ng-doc-node-details ngde"></div></td><td class="ng-doc-api-table-type ngde"><code indexable="false" class="ngde">boolean | undefined</code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">@ignore</p></td></tr><tr class="ngde" data-slug="markAndDelete" data-slugtype="member" id="markAndDelete"><td indexable="false" class="ngde"><span class="ngde">markAndDelete</span><div class="ng-doc-node-details ngde"></div></td><td class="ng-doc-api-table-type ngde"><code indexable="false" class="ngde ng-doc-code-with-link">Partial&#x3C;<a href="smart-ngrx-api/interfaces/smart-ngrx-api/MarkAndDeleteInit" class="ng-doc-code-anchor ngde">MarkAndDeleteInit</a>> | undefined</code></td><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">The <code class="ngde ng-doc-code-with-link"><a href="smart-ngrx-api/interfaces/smart-ngrx-api/MarkAndDeleteInit" class="ng-doc-code-anchor ngde">MarkAndDeleteInit</a></code> for this entity. This is optional and if not provided it will use the global <code class="ngde ng-doc-code-with-link"><a href="smart-ngrx-api/interfaces/smart-ngrx-api/MarkAndDeleteInit" class="ng-doc-code-anchor ngde">MarkAndDeleteInit</a></code> that is registered with the as part of \`provideSmartNgRX()</p></td></tr></tbody></table></div><h2 id="methods" href="smart-ngrx-api/interfaces/smart-ngrx-api/SmartEntityDefinition" headinglink="true" class="ngde">Methods<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="methods"></ng-doc-heading-anchor></h2><div class="ng-doc-table-wrapper ngde"><table class="ngde"><thead class="ngde"><tr class="ngde"><th indexable="false" class="ngde"><h3 data-slugtype="member" id="defaultrow" href="smart-ngrx-api/interfaces/smart-ngrx-api/SmartEntityDefinition" headinglink="true" class="ngde">defaultRow()<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="defaultrow"></ng-doc-heading-anchor></h3><div class="ng-doc-node-details ngde"></div></th></tr></thead><tbody class="ngde"><tr class="ngde"><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">The static function that returns a default row for the entity when it does not yet exist in the store.</p></td></tr><tr class="ngde"><td class="ngde"><h5 class="no-anchor ng-doc-secondary-heading ngde" indexable="false">Presentation</h5><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">defaultRow</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">this</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">: </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">void</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> id: string): Row</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span></code></pre></td></tr><tr class="ngde"><td class="ngde"><h5 class="no-anchor ng-doc-secondary-heading ngde" indexable="false">Parameters</h5><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-api-table ngde"><thead class="ngde"><tr indexable="false" class="ngde"><th class="ngde">Name</th><th class="ngde">Type</th><th class="ngde">Description</th></tr></thead><tbody class="ngde"><tr class="ngde"><td indexable="false" class="ngde">this<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">void</code></td><td class="ngde"></td></tr><tr class="ngde"><td indexable="false" class="ngde">id<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">string</code></td><td class="ngde"><p class="ngde">The unique identifier for the row. You should use this to set the id of the id row in the default row. If the default row is being generated because it needs to be filled in for a virtual row and only has an index, the id that is passed in will be in the form of <code class="ngde ng-doc-code-with-link">index\${<a href="internal-api/variables/internal-api/psi" class="ng-doc-code-anchor ngde">psi</a>}\${index}</code>. You can use this information to create whatever ID is appropriate for the row.</p></td></tr></tbody></table></div><h5 class="no-anchor ng-doc-secondary-heading ngde" indexable="false">Returns</h5><div class="ng-doc-returns ngde"><code indexable="false" class="ngde">Row</code></div></td></tr></tbody></table></div><div class="ng-doc-table-wrapper ngde"><table class="ngde"><thead class="ngde"><tr class="ngde"><th indexable="false" class="ngde"><h3 data-slugtype="member" id="selectid" href="smart-ngrx-api/interfaces/smart-ngrx-api/SmartEntityDefinition" headinglink="true" class="ngde">selectId()<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="selectid"></ng-doc-heading-anchor></h3><div class="ng-doc-node-details ngde"></div></th></tr></thead><tbody class="ngde"><tr class="ngde"><td class="ngde"><div class="ng-doc-api-status ngde"></div><p class="ngde">Function that returns the ID of the row. If this is not supplied, the code will assume that <code class="ngde">id</code> is the primary key.</p></td></tr><tr class="ngde"><td class="ngde"><h5 class="no-anchor ng-doc-secondary-heading ngde" indexable="false">Presentation</h5><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">selectId</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">this</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">: </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">void</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">,</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> row: <a href="smart-ngrx-api/interfaces/smart-ngrx-api/SmartNgRXRowBase" class="ng-doc-code-anchor ngde">SmartNgRXRowBase</a>): string</span><span style="color:#24292E;--shiki-dark:#BFBDB6B3" class="ngde">;</span></span></code></pre></td></tr><tr class="ngde"><td class="ngde"><h5 class="no-anchor ng-doc-secondary-heading ngde" indexable="false">Parameters</h5><div class="ng-doc-table-wrapper ngde"><table class="ng-doc-api-table ngde"><thead class="ngde"><tr indexable="false" class="ngde"><th class="ngde">Name</th><th class="ngde">Type</th><th class="ngde">Description</th></tr></thead><tbody class="ngde"><tr class="ngde"><td indexable="false" class="ngde">this<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde">void</code></td><td class="ngde"></td></tr><tr class="ngde"><td indexable="false" class="ngde">row<div class="ng-doc-node-details ngde"></div></td><td class="ngde"><code indexable="false" class="ngde ng-doc-code-with-link"><a href="smart-ngrx-api/interfaces/smart-ngrx-api/SmartNgRXRowBase" class="ng-doc-code-anchor ngde">SmartNgRXRowBase</a></code></td><td class="ngde"></td></tr></tbody></table></div><h5 class="no-anchor ng-doc-secondary-heading ngde" indexable="false">Returns</h5><div class="ng-doc-returns ngde"><code indexable="false" class="ngde">string</code> <span class="ngde">-</span><p class="ngde">string that is the identifier value (not the field name) of the row.</p></div></td></tr></tbody></table></div>`,t=class e extends a{constructor(){super();this.pageType="api";this.pageContent=r;this.editSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/edit/main/libs/smart-core/src/types/smart-entity-definition.interface.ts?message=docs(): describe your changes here...#L9";this.viewSourceFileUrl="https://github.com/DaveMBush/SmartNgRX/blob/release/libs/smart-core/src/types/smart-entity-definition.interface.ts#L9"}static{this.\u0275fac=function(s){return new(s||e)}}static{this.\u0275cmp=d({type:e,selectors:[["ng-doc-page-139fagts"]],features:[l([{provide:a,useExisting:e}]),n],decls:1,vars:0,template:function(s,p){s&1&&i(0,"ng-doc-page")},dependencies:[c],encapsulation:2,changeDetection:0})}},g=[{path:"",component:t,title:"SmartEntityDefinition"}],y=g;export{t as PageComponent,y as default};
